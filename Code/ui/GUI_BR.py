# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\Amar\BR_GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(667, 417)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(30, 11, 580, 222))
        self.widget.setObjectName("widget")
        self.gridLayout = QtWidgets.QGridLayout(self.widget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        spacerItem = QtWidgets.QSpacerItem(568, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem, 0, 0, 1, 4)
        self.label_InferentialResults = QtWidgets.QLabel(self.widget)
        self.label_InferentialResults.setObjectName("label_InferentialResults")
        self.gridLayout.addWidget(self.label_InferentialResults, 1, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(532, 13, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem1, 2, 0, 1, 4)
        self.pb_PCA = QtWidgets.QPushButton(self.widget)
        self.pb_PCA.setObjectName("pb_PCA")
        self.gridLayout.addWidget(self.pb_PCA, 3, 0, 1, 1)
        self.pB_LPM = QtWidgets.QPushButton(self.widget)
        self.pB_LPM.setObjectName("pB_LPM")
        self.gridLayout.addWidget(self.pB_LPM, 3, 1, 1, 1)
        self.pB_Probit = QtWidgets.QPushButton(self.widget)
        self.pB_Probit.setObjectName("pB_Probit")
        self.gridLayout.addWidget(self.pB_Probit, 3, 2, 1, 1)
        self.pB_CHMap = QtWidgets.QPushButton(self.widget)
        self.pB_CHMap.setObjectName("pB_CHMap")
        self.gridLayout.addWidget(self.pB_CHMap, 3, 3, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(532, 13, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem2, 4, 0, 1, 4)
        spacerItem3 = QtWidgets.QSpacerItem(532, 13, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem3, 5, 0, 1, 4)
        self.label_PredResults = QtWidgets.QLabel(self.widget)
        self.label_PredResults.setObjectName("label_PredResults")
        self.gridLayout.addWidget(self.label_PredResults, 6, 0, 1, 1)
        self.pb_PredModelResults = QtWidgets.QPushButton(self.widget)
        self.pb_PredModelResults.setObjectName("pb_PredModelResults")
        self.gridLayout.addWidget(self.pb_PredModelResults, 7, 0, 1, 2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 667, 24))
        self.menubar.setObjectName("menubar")
        self.menuStart = QtWidgets.QMenu(self.menubar)
        self.menuStart.setObjectName("menuStart")
        self.menuImport_Data = QtWidgets.QMenu(self.menuStart)
        self.menuImport_Data.setObjectName("menuImport_Data")
        self.menuPlot = QtWidgets.QMenu(self.menubar)
        self.menuPlot.setObjectName("menuPlot")
        self.menuCorrelation_Matrix = QtWidgets.QMenu(self.menuPlot)
        self.menuCorrelation_Matrix.setObjectName("menuCorrelation_Matrix")
        self.menuInferential_Plots = QtWidgets.QMenu(self.menuPlot)
        self.menuInferential_Plots.setObjectName("menuInferential_Plots")
        self.menuProperties = QtWidgets.QMenu(self.menubar)
        self.menuProperties.setObjectName("menuProperties")
        self.menuDataset = QtWidgets.QMenu(self.menuProperties)
        self.menuDataset.setObjectName("menuDataset")
        self.menuVariables_2 = QtWidgets.QMenu(self.menuProperties)
        self.menuVariables_2.setObjectName("menuVariables_2")
        self.menuTablulate = QtWidgets.QMenu(self.menubar)
        self.menuTablulate.setObjectName("menuTablulate")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionVariables = QtWidgets.QAction(MainWindow)
        self.actionVariables.setObjectName("actionVariables")
        self.actionView_Kaggle = QtWidgets.QAction(MainWindow)
        self.actionView_Kaggle.setObjectName("actionView_Kaggle")
        self.actionBankrupt = QtWidgets.QAction(MainWindow)
        self.actionBankrupt.setObjectName("actionBankrupt")
        self.actionROA_C_beforeinterestanddepreceiationbeforeinterest = QtWidgets.QAction(MainWindow)
        self.actionROA_C_beforeinterestanddepreceiationbeforeinterest.setObjectName("actionROA_C_beforeinterestanddepreceiationbeforeinterest")
        self.actionROA_A_beforeinterestsnd_aftertax = QtWidgets.QAction(MainWindow)
        self.actionROA_A_beforeinterestsnd_aftertax.setObjectName("actionROA_A_beforeinterestsnd_aftertax")
        self.actionROA_B_beforeinterestanddespreciationaftertax = QtWidgets.QAction(MainWindow)
        self.actionROA_B_beforeinterestanddespreciationaftertax.setObjectName("actionROA_B_beforeinterestanddespreciationaftertax")
        self.actionOperating_Gross_Margin = QtWidgets.QAction(MainWindow)
        self.actionOperating_Gross_Margin.setObjectName("actionOperating_Gross_Margin")
        self.actionRealized_Sales_Gross_Margin = QtWidgets.QAction(MainWindow)
        self.actionRealized_Sales_Gross_Margin.setObjectName("actionRealized_Sales_Gross_Margin")
        self.actionOperating_Profit_Rate = QtWidgets.QAction(MainWindow)
        self.actionOperating_Profit_Rate.setObjectName("actionOperating_Profit_Rate")
        self.actionPre_tax_Net_Interest_rate = QtWidgets.QAction(MainWindow)
        self.actionPre_tax_Net_Interest_rate.setObjectName("actionPre_tax_Net_Interest_rate")
        self.actionAfter_tax_Net_Interest_Rate = QtWidgets.QAction(MainWindow)
        self.actionAfter_tax_Net_Interest_Rate.setObjectName("actionAfter_tax_Net_Interest_Rate")
        self.actionNon_industry_Income_and_Expenditure_Revenue = QtWidgets.QAction(MainWindow)
        self.actionNon_industry_Income_and_Expenditure_Revenue.setObjectName("actionNon_industry_Income_and_Expenditure_Revenue")
        self.actionContinuous_Interest_Rate_After_Tax = QtWidgets.QAction(MainWindow)
        self.actionContinuous_Interest_Rate_After_Tax.setObjectName("actionContinuous_Interest_Rate_After_Tax")
        self.actionOperating_Expense_Rate = QtWidgets.QAction(MainWindow)
        self.actionOperating_Expense_Rate.setObjectName("actionOperating_Expense_Rate")
        self.actionResearch_and_Development_Expense_Rate = QtWidgets.QAction(MainWindow)
        self.actionResearch_and_Development_Expense_Rate.setObjectName("actionResearch_and_Development_Expense_Rate")
        self.actionCash_Flow_Rate = QtWidgets.QAction(MainWindow)
        self.actionCash_Flow_Rate.setObjectName("actionCash_Flow_Rate")
        self.actionTax_Rate_A = QtWidgets.QAction(MainWindow)
        self.actionTax_Rate_A.setObjectName("actionTax_Rate_A")
        self.actionNet_Value_Per_Share_A = QtWidgets.QAction(MainWindow)
        self.actionNet_Value_Per_Share_A.setObjectName("actionNet_Value_Per_Share_A")
        self.actionNet_Value_Per_Share_B = QtWidgets.QAction(MainWindow)
        self.actionNet_Value_Per_Share_B.setObjectName("actionNet_Value_Per_Share_B")
        self.actionNet_Value_Per_Share_C = QtWidgets.QAction(MainWindow)
        self.actionNet_Value_Per_Share_C.setObjectName("actionNet_Value_Per_Share_C")
        self.actionPersistent_EPS_in_the_Last_Four_Seasons = QtWidgets.QAction(MainWindow)
        self.actionPersistent_EPS_in_the_Last_Four_Seasons.setObjectName("actionPersistent_EPS_in_the_Last_Four_Seasons")
        self.actionCash_Flow_Per_Share = QtWidgets.QAction(MainWindow)
        self.actionCash_Flow_Per_Share.setObjectName("actionCash_Flow_Per_Share")
        self.actionRevenue_Per_Share_YuanY = QtWidgets.QAction(MainWindow)
        self.actionRevenue_Per_Share_YuanY.setObjectName("actionRevenue_Per_Share_YuanY")
        self.actionOperating_Profit_Per_Share_YuanY = QtWidgets.QAction(MainWindow)
        self.actionOperating_Profit_Per_Share_YuanY.setObjectName("actionOperating_Profit_Per_Share_YuanY")
        self.actionPer_SHare_Net_Profit_Before_Tax_YuanY = QtWidgets.QAction(MainWindow)
        self.actionPer_SHare_Net_Profit_Before_Tax_YuanY.setObjectName("actionPer_SHare_Net_Profit_Before_Tax_YuanY")
        self.actionRealized_Sales_Gross_Profit_Growth_Rate = QtWidgets.QAction(MainWindow)
        self.actionRealized_Sales_Gross_Profit_Growth_Rate.setObjectName("actionRealized_Sales_Gross_Profit_Growth_Rate")
        self.actionOperating_Profit_Growth_Rate = QtWidgets.QAction(MainWindow)
        self.actionOperating_Profit_Growth_Rate.setObjectName("actionOperating_Profit_Growth_Rate")
        self.actionAfter_tax_Net_Profit_Growth_Rate = QtWidgets.QAction(MainWindow)
        self.actionAfter_tax_Net_Profit_Growth_Rate.setObjectName("actionAfter_tax_Net_Profit_Growth_Rate")
        self.actionRegular_Net_Profit_Growth_Rate = QtWidgets.QAction(MainWindow)
        self.actionRegular_Net_Profit_Growth_Rate.setObjectName("actionRegular_Net_Profit_Growth_Rate")
        self.actionContinuous_Net_Profit_Growth_Rate = QtWidgets.QAction(MainWindow)
        self.actionContinuous_Net_Profit_Growth_Rate.setObjectName("actionContinuous_Net_Profit_Growth_Rate")
        self.actionTotal_Asset_Growth_Rate = QtWidgets.QAction(MainWindow)
        self.actionTotal_Asset_Growth_Rate.setObjectName("actionTotal_Asset_Growth_Rate")
        self.actionNet_Value_Growth_Rate = QtWidgets.QAction(MainWindow)
        self.actionNet_Value_Growth_Rate.setObjectName("actionNet_Value_Growth_Rate")
        self.actionTotal_Asset_Return_Growth_Rate_Ratio = QtWidgets.QAction(MainWindow)
        self.actionTotal_Asset_Return_Growth_Rate_Ratio.setObjectName("actionTotal_Asset_Return_Growth_Rate_Ratio")
        self.actionCash_Reinvestment = QtWidgets.QAction(MainWindow)
        self.actionCash_Reinvestment.setObjectName("actionCash_Reinvestment")
        self.actionCurrent_Ratio = QtWidgets.QAction(MainWindow)
        self.actionCurrent_Ratio.setObjectName("actionCurrent_Ratio")
        self.actionQuick_Ratio = QtWidgets.QAction(MainWindow)
        self.actionQuick_Ratio.setObjectName("actionQuick_Ratio")
        self.actionInterest_Expense_Ratio = QtWidgets.QAction(MainWindow)
        self.actionInterest_Expense_Ratio.setObjectName("actionInterest_Expense_Ratio")
        self.actionTotal_Debt_Total_net_Worth = QtWidgets.QAction(MainWindow)
        self.actionTotal_Debt_Total_net_Worth.setObjectName("actionTotal_Debt_Total_net_Worth")
        self.actionDebt_Ratio = QtWidgets.QAction(MainWindow)
        self.actionDebt_Ratio.setObjectName("actionDebt_Ratio")
        self.actionNet_Worth_Assets = QtWidgets.QAction(MainWindow)
        self.actionNet_Worth_Assets.setObjectName("actionNet_Worth_Assets")
        self.actionData_Shape = QtWidgets.QAction(MainWindow)
        self.actionData_Shape.setObjectName("actionData_Shape")
        self.actionVar_List = QtWidgets.QAction(MainWindow)
        self.actionVar_List.setObjectName("actionVar_List")
        self.actionVar_SS = QtWidgets.QAction(MainWindow)
        self.actionVar_SS.setObjectName("actionVar_SS")
        self.actionData_Size = QtWidgets.QAction(MainWindow)
        self.actionData_Size.setObjectName("actionData_Size")
        self.actionCM_Complete = QtWidgets.QAction(MainWindow)
        self.actionCM_Complete.setObjectName("actionCM_Complete")
        self.actionCM_Positive = QtWidgets.QAction(MainWindow)
        self.actionCM_Positive.setObjectName("actionCM_Positive")
        self.actionCM_Negative = QtWidgets.QAction(MainWindow)
        self.actionCM_Negative.setObjectName("actionCM_Negative")
        self.actionIP_PCA_FComp = QtWidgets.QAction(MainWindow)
        self.actionIP_PCA_FComp.setObjectName("actionIP_PCA_FComp")
        self.actionIP_ClassImbal = QtWidgets.QAction(MainWindow)
        self.actionIP_ClassImbal.setObjectName("actionIP_ClassImbal")
        self.actionIP_Debt_Ratio_to_Bankruptcy = QtWidgets.QAction(MainWindow)
        self.actionIP_Debt_Ratio_to_Bankruptcy.setObjectName("actionIP_Debt_Ratio_to_Bankruptcy")
        self.actionIP_Debt_Ratio_vs_Asset_Turnover = QtWidgets.QAction(MainWindow)
        self.actionIP_Debt_Ratio_vs_Asset_Turnover.setObjectName("actionIP_Debt_Ratio_vs_Asset_Turnover")
        self.actionIP_Grouped_Means = QtWidgets.QAction(MainWindow)
        self.actionIP_Grouped_Means.setObjectName("actionIP_Grouped_Means")
        self.actionLPM_Results = QtWidgets.QAction(MainWindow)
        self.actionLPM_Results.setObjectName("actionLPM_Results")
        self.actionProbit_Results = QtWidgets.QAction(MainWindow)
        self.actionProbit_Results.setObjectName("actionProbit_Results")
        self.actionRaw_Data = QtWidgets.QAction(MainWindow)
        self.actionRaw_Data.setObjectName("actionRaw_Data")
        self.actionClean_Data = QtWidgets.QAction(MainWindow)
        self.actionClean_Data.setObjectName("actionClean_Data")
        self.actionView_Git = QtWidgets.QAction(MainWindow)
        self.actionView_Git.setObjectName("actionView_Git")
        self.actionView_Report = QtWidgets.QAction(MainWindow)
        self.actionView_Report.setObjectName("actionView_Report")
        self.actionClose = QtWidgets.QAction(MainWindow)
        self.actionClose.setObjectName("actionClose")
        self.menuImport_Data.addAction(self.actionRaw_Data)
        self.menuImport_Data.addSeparator()
        self.menuImport_Data.addAction(self.actionClean_Data)
        self.menuStart.addAction(self.menuImport_Data.menuAction())
        self.menuStart.addSeparator()
        self.menuStart.addAction(self.actionView_Kaggle)
        self.menuStart.addAction(self.actionView_Git)
        self.menuStart.addAction(self.actionView_Report)
        self.menuStart.addSeparator()
        self.menuStart.addAction(self.actionClose)
        self.menuCorrelation_Matrix.addAction(self.actionCM_Complete)
        self.menuCorrelation_Matrix.addSeparator()
        self.menuCorrelation_Matrix.addAction(self.actionCM_Positive)
        self.menuCorrelation_Matrix.addAction(self.actionCM_Negative)
        self.menuInferential_Plots.addAction(self.actionIP_ClassImbal)
        self.menuInferential_Plots.addAction(self.actionIP_PCA_FComp)
        self.menuInferential_Plots.addSeparator()
        self.menuInferential_Plots.addAction(self.actionIP_Debt_Ratio_to_Bankruptcy)
        self.menuInferential_Plots.addAction(self.actionIP_Debt_Ratio_vs_Asset_Turnover)
        self.menuInferential_Plots.addSeparator()
        self.menuInferential_Plots.addAction(self.actionIP_Grouped_Means)
        self.menuPlot.addAction(self.menuCorrelation_Matrix.menuAction())
        self.menuPlot.addSeparator()
        self.menuPlot.addAction(self.menuInferential_Plots.menuAction())
        self.menuDataset.addAction(self.actionData_Shape)
        self.menuDataset.addAction(self.actionData_Size)
        self.menuVariables_2.addAction(self.actionVar_List)
        self.menuVariables_2.addAction(self.actionVar_SS)
        self.menuProperties.addAction(self.menuDataset.menuAction())
        self.menuProperties.addAction(self.menuVariables_2.menuAction())
        self.menuTablulate.addAction(self.actionLPM_Results)
        self.menuTablulate.addSeparator()
        self.menuTablulate.addAction(self.actionProbit_Results)
        self.menubar.addAction(self.menuStart.menuAction())
        self.menubar.addAction(self.menuProperties.menuAction())
        self.menubar.addAction(self.menuPlot.menuAction())
        self.menubar.addAction(self.menuTablulate.menuAction())
        self.toolBar.addAction(self.actionVariables)
        self.toolBar.addSeparator()

        self.retranslateUi(MainWindow)
        self.pb_PCA.clicked.connect(MainWindow.pushButton_click)
        self.pB_LPM.clicked.connect(MainWindow.pushButton_click)
        self.pB_Probit.clicked.connect(MainWindow.pushButton_click)
        self.pB_CHMap.clicked.connect(MainWindow.pushButton_click)
        self.toolBar.actionTriggered['QAction*'].connect(MainWindow.pushButton_click)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Predicting Bankruptcy"))
        self.label_InferentialResults.setText(_translate("MainWindow", "Inferential Results"))
        self.pb_PCA.setText(_translate("MainWindow", "PCA Results"))
        self.pB_LPM.setText(_translate("MainWindow", "LPM Results"))
        self.pB_Probit.setText(_translate("MainWindow", "Probit Results"))
        self.pB_CHMap.setText(_translate("MainWindow", "Correlation Heatmap"))
        self.label_PredResults.setText(_translate("MainWindow", "Predictive Results "))
        self.pb_PredModelResults.setText(_translate("MainWindow", "View Model Results"))
        self.menuStart.setTitle(_translate("MainWindow", "Start"))
        self.menuImport_Data.setTitle(_translate("MainWindow", "Import Data..."))
        self.menuPlot.setTitle(_translate("MainWindow", "Plot"))
        self.menuCorrelation_Matrix.setTitle(_translate("MainWindow", "Correlation Matrix..."))
        self.menuInferential_Plots.setTitle(_translate("MainWindow", "Inferential Plots..."))
        self.menuProperties.setTitle(_translate("MainWindow", "Properties"))
        self.menuDataset.setTitle(_translate("MainWindow", "Dataset..."))
        self.menuVariables_2.setTitle(_translate("MainWindow", "Variables..."))
        self.menuTablulate.setTitle(_translate("MainWindow", "Tablulate"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionVariables.setText(_translate("MainWindow", "Variables"))
        self.actionVariables.setToolTip(_translate("MainWindow", "Dataset Variables"))
        self.actionView_Kaggle.setText(_translate("MainWindow", "View Kaggle Competition"))
        self.actionBankrupt.setText(_translate("MainWindow", "Bankrupt"))
        self.actionROA_C_beforeinterestanddepreceiationbeforeinterest.setText(_translate("MainWindow", "ROA(C) before interest and depreceiation before interest"))
        self.actionROA_A_beforeinterestsnd_aftertax.setText(_translate("MainWindow", "ROA(A) before interest and % after tax"))
        self.actionROA_B_beforeinterestanddespreciationaftertax.setText(_translate("MainWindow", "ROA(B) before interest and depreciation after tax "))
        self.actionOperating_Gross_Margin.setText(_translate("MainWindow", "Operating Gross Margin"))
        self.actionRealized_Sales_Gross_Margin.setText(_translate("MainWindow", "Realized Sales Gross Margin"))
        self.actionOperating_Profit_Rate.setText(_translate("MainWindow", "Operating Profit Rate"))
        self.actionPre_tax_Net_Interest_rate.setText(_translate("MainWindow", "Pre-tax Net Interest rate"))
        self.actionAfter_tax_Net_Interest_Rate.setText(_translate("MainWindow", "After-tax Net Interest Rate"))
        self.actionNon_industry_Income_and_Expenditure_Revenue.setText(_translate("MainWindow", "Non-industry Income and Expenditure / Revenue"))
        self.actionContinuous_Interest_Rate_After_Tax.setText(_translate("MainWindow", "Continuous Interest Rate (After Tax)"))
        self.actionOperating_Expense_Rate.setText(_translate("MainWindow", "Operating Expense Rate"))
        self.actionResearch_and_Development_Expense_Rate.setText(_translate("MainWindow", "Research and Development Expense Rate"))
        self.actionCash_Flow_Rate.setText(_translate("MainWindow", "Cash Flow Rate"))
        self.actionTax_Rate_A.setText(_translate("MainWindow", "Tax Rate (A)"))
        self.actionNet_Value_Per_Share_A.setText(_translate("MainWindow", "Net Value Per Share (A)"))
        self.actionNet_Value_Per_Share_B.setText(_translate("MainWindow", "Net Value Per Share (B)"))
        self.actionNet_Value_Per_Share_C.setText(_translate("MainWindow", "Net Value Per Share (C)"))
        self.actionPersistent_EPS_in_the_Last_Four_Seasons.setText(_translate("MainWindow", "Persistent EPS in the Last Four Seasons"))
        self.actionCash_Flow_Per_Share.setText(_translate("MainWindow", "Cash Flow Per Share"))
        self.actionRevenue_Per_Share_YuanY.setText(_translate("MainWindow", "Revenue Per Share (YuanY)"))
        self.actionOperating_Profit_Per_Share_YuanY.setText(_translate("MainWindow", "Operating Profit Per Share (YuanY)"))
        self.actionPer_SHare_Net_Profit_Before_Tax_YuanY.setText(_translate("MainWindow", "Per Share Net Profit Before Tax (YuanY)"))
        self.actionRealized_Sales_Gross_Profit_Growth_Rate.setText(_translate("MainWindow", "Realized Sales Gross Profit Growth Rate"))
        self.actionOperating_Profit_Growth_Rate.setText(_translate("MainWindow", "Operating Profit Growth Rate"))
        self.actionAfter_tax_Net_Profit_Growth_Rate.setText(_translate("MainWindow", "After-tax Net Profit Growth Rate"))
        self.actionRegular_Net_Profit_Growth_Rate.setText(_translate("MainWindow", "Regular Net Profit Growth Rate"))
        self.actionContinuous_Net_Profit_Growth_Rate.setText(_translate("MainWindow", "Continuous Net Profit Growth Rate"))
        self.actionTotal_Asset_Growth_Rate.setText(_translate("MainWindow", "Total Asset Growth Rate"))
        self.actionNet_Value_Growth_Rate.setText(_translate("MainWindow", "Net Value Growth Rate"))
        self.actionTotal_Asset_Return_Growth_Rate_Ratio.setText(_translate("MainWindow", "Total Asset Return Growth Rate Ratio"))
        self.actionCash_Reinvestment.setText(_translate("MainWindow", "Cash Reinvestment %"))
        self.actionCurrent_Ratio.setText(_translate("MainWindow", "Current Ratio"))
        self.actionQuick_Ratio.setText(_translate("MainWindow", "Quick Ratio"))
        self.actionInterest_Expense_Ratio.setText(_translate("MainWindow", "Interest Expense Ratio"))
        self.actionTotal_Debt_Total_net_Worth.setText(_translate("MainWindow", "Total Debt / Total Net Worth"))
        self.actionDebt_Ratio.setText(_translate("MainWindow", "Debt Ratio %"))
        self.actionNet_Worth_Assets.setText(_translate("MainWindow", "Net Worth / Assets"))
        self.actionData_Shape.setText(_translate("MainWindow", "Shape"))
        self.actionVar_List.setText(_translate("MainWindow", "List"))
        self.actionVar_SS.setText(_translate("MainWindow", "Summary Statistics"))
        self.actionData_Size.setText(_translate("MainWindow", "Size"))
        self.actionCM_Complete.setText(_translate("MainWindow", "Complete"))
        self.actionCM_Positive.setText(_translate("MainWindow", "Positive"))
        self.actionCM_Negative.setText(_translate("MainWindow", "Negative"))
        self.actionIP_PCA_FComp.setText(_translate("MainWindow", "PCA Feature Composition"))
        self.actionIP_ClassImbal.setText(_translate("MainWindow", "Class Imbalance"))
        self.actionIP_Debt_Ratio_to_Bankruptcy.setText(_translate("MainWindow", "Debt Ratio to Bankruptcy"))
        self.actionIP_Debt_Ratio_vs_Asset_Turnover.setText(_translate("MainWindow", "Debt Ratio vs Asset Turnover"))
        self.actionIP_Grouped_Means.setText(_translate("MainWindow", "Grouped Means"))
        self.actionLPM_Results.setText(_translate("MainWindow", "LPM Results"))
        self.actionProbit_Results.setText(_translate("MainWindow", "Probit Results"))
        self.actionRaw_Data.setText(_translate("MainWindow", "Raw Data"))
        self.actionClean_Data.setText(_translate("MainWindow", "Clean Data"))
        self.actionView_Git.setText(_translate("MainWindow", "View GitHub Repository"))
        self.actionView_Report.setText(_translate("MainWindow", "View Project Report"))
        self.actionClose.setText(_translate("MainWindow", "Close"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
